library(dplyr) #data manipulation
library(ggplot2) #visualizations
library(gridExtra) #viewing multiple plots together
library(tidytext) #text mining
library(quanteda)
data <- read.csv("data/Rihanna.csv")
View(data)
View(data)
View(data)
data.isNa()
library(tidyr)
data_clean <- data %>% drop_na()
View(data_clean)
View(data)
data[is.na(data["Album"])] <- "Single"
data[is.na(data$"Album")] <- "Single"
View(data)
data[is.na(data$Album)] <- "Single"
View(data)
data$Album
data <- read.csv("data/Rihanna.csv", na.strings = c("", "NA"))
View(data)
data[is.na(data$Album)] <- "Single"
data[is.na(data["Album"])] <- "Single"
data$Album <- data$Album %>% replace_na("Single")
View(data)
data_clean <- data %>% drop_na()
View(data_clean)
data_clean$Lyric <- sapply(data_clean$Lyric, modify_contractions)
data_clean$Lyric <- sapply(data_clean$Lyric, modify.contractions)
modify_contractions <- function(df){
df <- gsub("'re", " are", df)
df <- gsub("'m", " am", df)
df <- gsub("'d", " would", df)
df <- gsub("'ve", " have", df)
df <- gsub("let's", "let us", df)
df <- gsub("'s", " is", df)
df <- gsub("can't", "can not", df)
df <- gsub("aren't","are not", df)
df <- gsub("'ll"," will", df)
df <- gsub("won't","will not", df)
df <- gsub("'ve"," have", df)
df <- gsub("n'","ng ", df)
df <- gsub("'cause","because", df)
df <- gsub("y'","you ", df)
df <- gsub("gonna","going to", df)
return(df)
}
data_clean$Lyric <- sapply(data_clean$Lyric, modify_contractions)
View(data_clean)
library(dplyr) #data manipulation
library(ggplot2) #visualizations
library(gridExtra) #viewing multiple plots together
library(tidytext) #text mining
library(quanteda)
library(tidyr)
data <- read.csv("data/Rihanna.csv", na.strings = c("", "NA"))
data$Album <- data$Album %>% replace_na("Single")
data_clean <- data %>% drop_na()
modify_contractions <- function(df){
df <- gsub("'re", " are", df)
df <- gsub("'m", " am", df)
df <- gsub("'d", " would", df)
df <- gsub("'ve", " have", df)
df <- gsub("'s", " is", df)
df <- gsub("can't", "can not", df)
df <- gsub("aren't","are not", df)
df <- gsub("'ll"," will", df)
df <- gsub("won't","will not", df)
df <- gsub("n'","ng ", df)
df <- gsub("'cause","because", df)
df <- gsub("y'","you ", df)
df <- gsub("gonna","going to", df)
return(df)
}
data_clean$Lyric <- sapply(data_clean$Lyric, modify_contractions)
View(data)
View(data_clean)
specialChars <- function(x) gsub("[^a-zA-Z0-9 ]", " ", x)
data_clean$Lyric <- sapply(data_clean$lyrics, specialChars)
data <- read.csv("data/Rihanna.csv", na.strings = c("", "NA"))
data$X <- NULL
data$Album <- data$Album %>% replace_na("Single")
data_clean <- data %>% drop_na()
data <- read.csv("data/Rihanna.csv", na.strings = c("", "NA"))
data$X <- NULL
data$Album <- data$Album %>% replace_na("Single")
data_clean <- data %>% drop_na()
modify_contractions <- function(df){
df <- gsub("'re", " are", df)
df <- gsub("'m", " am", df)
df <- gsub("'d", " would", df)
df <- gsub("'ve", " have", df)
df <- gsub("'s", " is", df)
df <- gsub("can't", "can not", df)
df <- gsub("aren't","are not", df)
df <- gsub("'ll"," will", df)
df <- gsub("won't","will not", df)
df <- gsub("n'","ng ", df)
df <- gsub("'cause","because", df)
df <- gsub("y'","you ", df)
df <- gsub("gonna","going to", df)
return(df)
}
data_clean$Lyric <- sapply(data_clean$Lyric, modify_contractions)
specialChars <- function(x) gsub("[^a-zA-Z0-9 ]", " ", x)
data_clean$Lyric <- sapply(data_clean$Lyric, specialChars)
View(data_clean)
############
corpus <- corpus(data_clean$Lyric)
corpus
############
songs_names <- unlist(data_clean$Title)
data <- read.csv("data/Rihanna.csv", na.strings = c("", "NA"))
data$X <- NULL
data$Album <- data$Album %>% replace_na("Single")
data_clean <- data %>% drop_na()
modify_contractions <- function(df){
df <- gsub("'re", " are", df)
df <- gsub("'m", " am", df)
df <- gsub("'d", " would", df)
df <- gsub("'ve", " have", df)
df <- gsub("'s", " is", df)
df <- gsub("can't", "can not", df)
df <- gsub("aren't","are not", df)
df <- gsub("'ll"," will", df)
df <- gsub("won't","will not", df)
df <- gsub("n'","ng ", df)
df <- gsub("'cause","because", df)
df <- gsub("y'","you ", df)
df <- gsub("gonna","going to", df)
return(df)
}
data_clean$Lyric <- sapply(data_clean$Lyric, modify_contractions)
specialChars <- function(x) gsub("[^a-zA-Z0-9 ]", " ", x)
data_clean$Lyric <- sapply(data_clean$Lyric, specialChars)
############
corpus <- corpus(data_clean$Lyric)
corpus
dfm1 <- dfm(tokens(corpus))
View(dfm1)
topfeatures(dfm1)
dfm2 <- dfm_remove(dfm1, stopwords("en"))
topfeatures(dfm2)
wordcloud2(data = topfeatures(dfm2), size =1,  color = brewer.pal(8, 'Dark2'))
library(wordcloud2)
wordcloud2(data = topfeatures(dfm2), size =1,  color = brewer.pal(8, 'Dark2'))
View(dfm2)
plot(topfeatures(dfm2))
View(dfm2)
aux<- topfeatures(dfm2)
aux
head(aux)
topfeatures(dfm1, decreasing = FALSE)
trimws('   hello   ')
data$Lyric <- trimws(data$Lyric)
View(data)
data <- read.csv("data/Rihanna.csv", na.strings = c("", "NA"))
data$X <- NULL
data$Album <- data$Album %>% replace_na("Single")
data$Lyric <- trimws(data$Lyric)
data_clean <- data %>% drop_na()
modify_contractions <- function(df){
df <- gsub("'re", " are", df)
df <- gsub("'m", " am", df)
df <- gsub("'d", " would", df)
df <- gsub("'ve", " have", df)
df <- gsub("'s", " is", df)
df <- gsub("can't", "can not", df)
df <- gsub("aren't","are not", df)
df <- gsub("'ll"," will", df)
df <- gsub("won't","will not", df)
df <- gsub("n'","ng ", df)
df <- gsub("'cause","because", df)
df <- gsub("y'","you ", df)
df <- gsub("gonna","going to", df)
return(df)
}
data_clean$Lyric <- sapply(data_clean$Lyric, modify_contractions)
specialChars <- function(x) gsub("[^a-zA-Z0-9 ]", " ", x)
data_clean$Lyric <- sapply(data_clean$Lyric, specialChars)
View(data_clean)
data_clean$Lyric <- trimws(data_clean$Lyric)
View(data_clean)
topfeatures(dfm2, n=30)
data <- read.csv("data/Rihanna.csv", na.strings = c("", "NA"))
data$X <- NULL
data$Album <- data$Album %>% replace_na("Single")
data$Lyric <- trimws(data$Lyric)
data_clean <- data %>% drop_na()
data_clean$Lyric <- trimws(data_clean$Lyric)
modify_contractions <- function(df){
df <- gsub("'re", " are", df)
df <- gsub("'m", " am", df)
df <- gsub("'d", " would", df)
df <- gsub("'ve", " have", df)
df <- gsub("'s", " is", df)
df <- gsub("can't", "can not", df)
df <- gsub("aren't","are not", df)
df <- gsub("'ll"," will", df)
df <- gsub("won't","will not", df)
df <- gsub("n'","ng ", df)
df <- gsub("'cause","because", df)
df <- gsub("y'","you ", df)
df <- gsub("gonna","going to", df)
return(df)
}
data_clean$Lyric <- sapply(data_clean$Lyric, modify_contractions)
specialChars <- function(x) gsub("[^a-zA-Z0-9 ]", " ", x)
data_clean$Lyric <- sapply(data_clean$Lyric, specialChars)
############
corpus <- corpus(data_clean$Lyric)
corpus
dfm1 <- dfm(tokens(corpus))
topfeatures(dfm1)
dfm2 <- dfm_remove(dfm1, stopwords("en"))
topfeatures(dfm2, n=30)
topfeatures(dfm1, decreasing = FALSE)
View(data_clean)
data <- read.csv("data/Rihanna.csv", na.strings = c("", "NA"))
data$X <- NULL
data$Album <- data$Album %>% replace_na("Single")
data$Lyric <- trimws(data$Lyric)
data_clean <- data %>% drop_na()
data_clean$Lyric <- trimws(data_clean$Lyric)
modify_contractions <- function(df){
df <- gsub("'re", " are", df)
df <- gsub("'m", " am", df)
df <- gsub("'d", " would", df)
df <- gsub("'ve", " have", df)
df <- gsub("'s", " is", df)
df <- gsub("can't", "can not", df)
df <- gsub("aren't","are not", df)
df <- gsub("'ll"," will", df)
df <- gsub("won't","will not", df)
df <- gsub("n'","ng ", df)
df <- gsub("'cause","because", df)
df <- gsub("y'","you ", df)
df <- gsub("gonna","going to", df)
df <- gsub("c amon","come on", df)
return(df)
}
data_clean$Lyric <- sapply(data_clean$Lyric, modify_contractions)
specialChars <- function(x) gsub("[^a-zA-Z0-9 ]", " ", x)
data_clean$Lyric <- sapply(data_clean$Lyric, specialChars)
############
corpus <- corpus(data_clean$Lyric)
corpus
dfm1 <- dfm(tokens(corpus))
topfeatures(dfm1)
dfm2 <- dfm_remove(dfm1, stopwords("en"))
topfeatures(dfm2, n=30)
topfeatures(dfm1, decreasing = FALSE)
topfeatures(dfm1, n = 30,decreasing = FALSE)
dfm_trim1<-dfm_trim(corpus, min_termfreq = 10, verbose = FALSE)
data$Lyric <- trimws(data$Lyric)
data$Lyric <- trimws(data$Lyric)
dfm_trim1<-dfm_trim(dfm1, min_termfreq = 10, verbose = FALSE)
set.seed(100)
textplot_wordcloud(dfm_trim1)
library("quanteda.textplots")
textplot_wordcloud(dfm_trim1)
dfm_trim1<-dfm_trim(dfm2, min_termfreq = 10, verbose = FALSE)
dfm1 <- dfm(tokens(corpus))
library(dplyr) #data manipulation
library(ggplot2) #visualizations
library(gridExtra) #viewing multiple plots together
library(tidytext) #text mining
library(quanteda)
library(tidyr)
library("quanteda.textplots")
data <- read.csv("data/Rihanna.csv", na.strings = c("", "NA"))
data$X <- NULL
data$Album <- data$Album %>% replace_na("Single")
data$Lyric <- trimws(data$Lyric)
data_clean <- data %>% drop_na()
data_clean$Lyric <- trimws(data_clean$Lyric)
modify_contractions <- function(df){
df <- gsub("'re", " are", df)
df <- gsub("'m", " am", df)
df <- gsub("'d", " would", df)
df <- gsub("'ve", " have", df)
df <- gsub("'s", " is", df)
df <- gsub("can't", "can not", df)
df <- gsub("aren't","are not", df)
df <- gsub("'ll"," will", df)
df <- gsub("won't","will not", df)
df <- gsub("n'","ng ", df)
df <- gsub("'cause","because", df)
df <- gsub("y'","you ", df)
df <- gsub("gonna","going to", df)
df <- gsub("c amon","come on", df)
return(df)
}
data_clean$Lyric <- sapply(data_clean$Lyric, modify_contractions)
specialChars <- function(x) gsub("[^a-zA-Z0-9 ]", " ", x)
data_clean$Lyric <- sapply(data_clean$Lyric, specialChars)
############
corpus <- corpus(data_clean$Lyric)
corpus
dfm1 <- dfm(tokens(corpus))
topfeatures(dfm1)
dfm2 <- dfm_remove(dfm1, stopwords("en"))
topfeatures(dfm2, n=30)
topfeatures(dfm1, n = 30,decreasing = FALSE)
dfm_trim1<-dfm_trim(dfm2, min_termfreq = 10, verbose = FALSE)
set.seed(100)
textplot_wordcloud(dfm_trim1)
################
library("quanteda.textstats")
################
library("quanteda.textstats")
features_dfm_inaug <- textstat_frequency(dfm2, n = 100)
features_dfm_inaug$feature <- with(features_dfm_inaug, reorder(feature, -frequency))
ggplot(features_dfm_inaug, aes(x = feature, y = frequency)) +
geom_point() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
